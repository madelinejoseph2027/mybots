#Importsimport pybullet as pimport pyrosim.pyrosim as pyrosimimport numpy as npimport constants as cfrom sensor import SENSORfrom motor import MOTORclass ROBOT:        def __init__(self):        self.robotId = p.loadURDF("body.urdf")        pyrosim.Prepare_To_Simulate(self.robotId)                self.Prepare_To_Sense()        self.Prepare_To_Act()                #Sensing    def Prepare_To_Sense(self):        self.sensors = {}        for linkName in pyrosim.linkNamesToIndices:            self.sensors[linkName] = SENSOR(linkName = linkName)            def Sense(self, i):        for j,s in enumerate(self.sensors):            SENSOR.Get_Value(self.sensors[s], i)                #Acting    def Prepare_To_Act(self):        self.motors = {}        for jointName in pyrosim.jointNamesToIndices:            self.motors[jointName] = MOTOR(jointName = jointName)                    self.angleRange = np.linspace(0, 2*np.pi, c.iterations+1)        self.amplitude = c.backLegAmplitude        self.frequency = c.backLegFrequency        self.offset = c.backLegPhaseOffset        self.motorValues1 = self.amplitude*np.sin(self.frequency*self.angleRange + self.offset)        self.motorValues2 = self.amplitude*np.sin(self.frequency*self.angleRange/2.0 + self.offset)            def Act(self, i):        for k,m in enumerate(self.motors):            if k == 0:                self.motorValues = self.motorValues1            else:                self.motorValues = self.motorValues2            MOTOR.Set_Value(self.motors[m], self, i)            